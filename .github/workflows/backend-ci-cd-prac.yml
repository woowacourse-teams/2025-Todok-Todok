name: Backend CI/CD

on:
  push:
    branches: [ "practice" ]

jobs:
  ci:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./backend

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.SECRETS_SUBMODULE_ACCESS_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Clean Project
        run: ./gradlew clean

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Assemble Build
        run: ./gradlew build

      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_DEPLOY_USERNAME }}
          password: ${{ secrets.DOCKERHUB_DEPLOY_TOKEN }}

      - name: Docker Image Build & Push
        run: |
          docker buildx build -f Dockerfile.dev --platform linux/arm64 -t woowajeff/todoktodok:dev --push .

  cd:
    needs: ci
    runs-on: [self-hosted, prac]
    steps:
      - name: Cleanup backend log directory before checkout
        run: |
          sudo rm -rf backend/log/dev || true

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SECRETS_SUBMODULE_ACCESS_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_DEPLOY_USERNAME }}
          password: ${{ secrets.DOCKERHUB_DEPLOY_TOKEN }}

      - name: Pull Docker image
        run: |
          echo "Docker 이미지 pull 시작"
          docker pull woowajeff/todoktodok:dev
          echo "Docker 이미지 pull 완료"

      - name: Stop running Container (without removing)
        run: |
          echo "dev 컨테이너 중지 중..."
          docker stop dev && echo "dev 컨테이너 중지 완료" || echo "dev 컨테이너 없음"
          
          echo "promtail_dev 컨테이너 중지 중..."
          docker stop promtail_dev && echo "promtail_dev 컨테이너 중지 완료" || echo "promtail_dev 컨테이너 없음"

      - name: Docker Compose Up
        run: |
          cd backend
          docker compose -f config/docker-compose-dev.yml up -d
          echo "docker compose-dev up"

      - name: Docker image Prune
        run: |
          echo "사용하지 않는 Docker 이미지 정리 중..."
          sudo docker image prune -af
          echo "이미지 정리 완료"
